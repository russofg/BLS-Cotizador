---
import Base from "../layouts/Base.astro";
import Input from "../components/ui/Input.astro";
import Button from "../components/ui/Button.astro";
import { ValidationHelper } from "../utils/validationHelpers";
---

<Base title="Iniciar Sesión - BLS Cotizador">
  <div
    class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8"
  >
    <div class="max-w-md w-full space-y-8">
      <div>
        <div
          class="mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-primary-100"
        >
          <svg
            class="h-8 w-8 text-primary-600"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          BLS Cotizador
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
          Sistema de Cotizaciones Audiovisuales
        </p>
      </div>

      <form class="mt-8 space-y-6" id="login-form">
        <input type="hidden" name="remember" value="true" />
        <div class="space-y-4">
          <Input
            id="email-address"
            name="email"
            type="email"
            autocomplete="email"
            required
            placeholder="Dirección de email"
            label="Email"
          />
          <Input
            id="password"
            name="password"
            type="password"
            autocomplete="current-password"
            required
            placeholder="Contraseña"
            label="Contraseña"
          />
        </div>

        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember-me"
              name="remember-me"
              type="checkbox"
              class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
            />
            <label for="remember-me" class="ml-2 block text-sm text-gray-900">
              Recordarme
            </label>
          </div>

          <div class="text-sm">
            <a
              href="#"
              class="font-medium text-primary-600 hover:text-primary-500"
            >
              ¿Olvidaste tu contraseña?
            </a>
          </div>
        </div>

        <div>
          <Button
            type="submit"
            id="login-button"
            variant="primary"
            size="lg"
            class="w-full"
          >
            <span class="absolute left-0 inset-y-0 flex items-center pl-3">
              <svg
                class="h-5 w-5 text-primary-500 group-hover:text-primary-400"
                fill="currentColor"
                viewBox="0 0 20 20"
                aria-hidden="true"
              >
                <path
                  fill-rule="evenodd"
                  d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                  clip-rule="evenodd"></path>
              </svg>
            </span>
            <span id="login-text">Iniciar Sesión</span>
          </Button>
        </div>

        <!-- Error message -->
        <div id="error-message" class="hidden rounded-md bg-red-50 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg
                class="h-5 w-5 text-red-400"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-red-800">
                Error de autenticación
              </h3>
              <div class="mt-2 text-sm text-red-700" id="error-text">
                Las credenciales proporcionadas no son válidas.
              </div>
            </div>
          </div>
        </div>

        <!-- Demo credentials -->
        <div class="rounded-md bg-blue-50 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg
                class="h-5 w-5 text-blue-400"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  fill-rule="evenodd"
                  d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-blue-800">
                Credenciales de Demo
              </h3>
              <div class="mt-2 text-sm text-blue-700">
                <p><strong>Usuario:</strong> demo@bls.com.ar</p>
                <p><strong>Contraseña:</strong> demo123</p>
                <p class="mt-1 text-xs">
                  Estas credenciales son solo para demostración.
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Registro link -->
        <div class="mt-6 text-center space-y-2">
          <p class="text-sm text-gray-600">
            ¿No tienes una cuenta?
            <a
              href="/register"
              class="font-medium text-primary-600 hover:text-primary-500 transition-colors"
            >
              Regístrate aquí
            </a>
          </p>
          <p class="text-sm text-gray-600">
            <a
              href="#"
              id="forgot-password-link"
              class="font-medium text-primary-600 hover:text-primary-500 transition-colors"
            >
              ¿Olvidaste tu contraseña?
            </a>
          </p>
        </div>
      </form>
    </div>
  </div>
</Base>

<script>
  import { authService } from "../utils/auth";
  import { notifications } from "../utils/notifications.js";
  import { ValidationHelper } from "../utils/validationHelpers";

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("login-form") as HTMLFormElement;
    const button = document.getElementById("login-button") as HTMLButtonElement;
    const buttonText = document.getElementById("login-text");
    const errorMessage = document.getElementById("error-message");
    const errorText = document.getElementById("error-text");

    // Check if already authenticated
    authService.isAuthenticated().then((isAuth) => {
      if (isAuth) {
        window.location.href = "/dashboard";
      }
    });

    form?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const email = formData.get("email") as string;
      const password = formData.get("password") as string;

      // Use centralized validation
      const validation = ValidationHelper.validateLogin({ email, password });
      if (!validation.isValid) {
        notifications.warning(
          "Campos requeridos",
          validation.errors.join(", ")
        );
        return;
      }

      try {
        // Show loading notification
        notifications.loading("Iniciando sesión", "Validando credenciales...");

        const { user, error } = await authService.signIn(email, password);

        if (error) {
          throw new Error(error.message);
        }

        if (user) {
          // Show success and redirect
          notifications.success("¡Bienvenido!", "Redirigiendo al dashboard...");

          // Small delay to show the success message
          setTimeout(() => {
            window.location.href = "/dashboard";
          }, 1000);
        }
      } catch (error) {
        console.error("Login error:", error);
        let errorMessage = "Error de autenticación";

        if (error instanceof Error) {
          // Traducir códigos de error de Firebase a mensajes amigables
          const errorCode = error.message;

          if (
            errorCode.includes("invalid-credential") ||
            errorCode.includes("user-not-found")
          ) {
            errorMessage = "Usuario no registrado o credenciales incorrectas";
          } else if (
            errorCode.includes("wrong-password") ||
            errorCode.includes("invalid-password")
          ) {
            errorMessage = "Contraseña incorrecta";
          } else if (errorCode.includes("invalid-email")) {
            errorMessage = "Formato de email inválido";
          } else if (errorCode.includes("user-disabled")) {
            errorMessage = "Esta cuenta ha sido deshabilitada";
          } else if (errorCode.includes("too-many-requests")) {
            errorMessage = "Demasiados intentos fallidos. Intenta más tarde";
          } else if (errorCode.includes("network-request-failed")) {
            errorMessage = "Error de conexión. Verifica tu internet";
          } else if (errorCode.includes("internal-error")) {
            errorMessage = "Error interno del servidor. Intenta más tarde";
          } else {
            // Para cualquier otro error de Firebase, mostrar mensaje genérico
            errorMessage = "Error de autenticación. Verifica tus credenciales";
          }
        }

        notifications.error("Error de acceso", errorMessage);
      }
    });

    // Auto-fill demo credentials when clicking on demo info
    const demoInfo = document.querySelector(".bg-blue-50");
    demoInfo?.addEventListener("click", () => {
      const emailInput = document.getElementById(
        "email-address"
      ) as HTMLInputElement;
      const passwordInput = document.getElementById(
        "password"
      ) as HTMLInputElement;

      if (emailInput && passwordInput) {
        // Pre-fill demo credentials for easy testing
        emailInput.value = "demo@bls.com.ar";
        passwordInput.value = "demo123";
      }
    });

    // Forgot password functionality
    const forgotPasswordLink = document.getElementById("forgot-password-link");
    forgotPasswordLink?.addEventListener("click", async (e) => {
      e.preventDefault();

      const { value: email } = await notifications.input(
        "Recuperar contraseña",
        "Ingresa tu email para recibir instrucciones",
        "email"
      );

      if (email) {
        // Validate email before sending reset request
        const emailValidation = ValidationHelper.validateEmail(email);
        if (!emailValidation.isValid) {
          notifications.warning(
            "Email inválido",
            emailValidation.errors.join(", ")
          );
          return;
        }

        try {
          notifications.loading("Enviando email", "Procesando solicitud...");

          const { success, error } = await authService.resetPassword(email);

          if (error) {
            throw new Error(error.message);
          }

          if (success) {
            await notifications.success(
              "Email enviado",
              "Revisa tu bandeja de entrada para continuar con el proceso de recuperación."
            );
          }
        } catch (error) {
          console.error("Password reset error:", error);
          let errorMessage = "No se pudo enviar el email de recuperación";

          if (error instanceof Error) {
            const errorCode = error.message;

            if (errorCode.includes("user-not-found")) {
              errorMessage = "No existe una cuenta con este email";
            } else if (errorCode.includes("invalid-email")) {
              errorMessage = "El formato del email no es válido";
            } else if (errorCode.includes("too-many-requests")) {
              errorMessage = "Demasiados intentos. Intenta más tarde";
            }
          }

          notifications.error("Error", errorMessage);
        }
      }
    });
  });
</script>

<style>
  #login-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .bg-blue-50 {
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .bg-blue-50:hover {
    background-color: rgb(219 234 254);
  }
</style>
