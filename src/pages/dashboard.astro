---
import DashboardLayout from "../layouts/Dashboard.astro";
import Card from "../components/ui/Card.astro";
import Button from "../components/ui/Button.astro";
import Badge from "../components/ui/Badge.astro";
import StatCard from "../components/ui/StatCard.astro";
import PageHeader from "../components/ui/PageHeader.astro";
import ScrollbarStyles from "../components/ScrollbarStyles.astro";
import { DateHelper } from "../utils/dateHelpers";
import { QuoteHelper } from "../utils/quoteHelpers";

// Load analytics data
let analytics: any = null;
let stats: {
  totalCotizaciones: number;
  cotizacionesPendientes: number;
  itemsActivos: number;
  totalClientes: number;
  cotizacionesRecientes: any[];
} = {
  totalCotizaciones: 0,
  cotizacionesPendientes: 0,
  itemsActivos: 0,
  totalClientes: 0,
  cotizacionesRecientes: [],
};

// Try to load analytics and stats, but fail gracefully
try {
  const { AnalyticsService } = await import("../services/AnalyticsService");
  analytics = await AnalyticsService.getDashboardAnalytics();
  
  // Update stats with analytics data
  stats = {
    totalCotizaciones: analytics.quotes.totalQuotes,
    cotizacionesPendientes: analytics.quotes.quotesByStatus.find((s: any) => s.status === 'Pendiente')?.count || 0,
    itemsActivos: analytics.items.activeItems,
    totalClientes: analytics.clients.totalClients,
    cotizacionesRecientes: [], // Will be loaded separately
  };
  
  console.log("Dashboard analytics loaded successfully");
} catch (error) {
  console.error("Error loading dashboard analytics:", error);
  
  // Fallback to old stats service
  try {
    const { statsService } = await import("../utils/database");
    stats = await statsService.getDashboardStats();
    console.log("Dashboard stats loaded successfully (fallback)");
  } catch (fallbackError) {
    console.error("Error loading dashboard stats (fallback):", fallbackError);
    // Keep default stats
  }
}

// Iconos como strings para reutilizar
const icons = {
  cotizaciones:
    '<path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>',
  pendientes:
    '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246C12.197 9.434 11.623 9.209 11 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd"></path>',
  items:
    '<path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"></path><path fill-rule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3z" clip-rule="evenodd"></path>',
  clientes:
    '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>',
};
---

<DashboardLayout title="Dashboard - BLS Cotizador" activeSection="dashboard">
  <ScrollbarStyles />
  <PageHeader
    title="Dashboard"
    subtitle="Resumen general del sistema de cotizaciones"
  />

  <!-- Stats Grid - Usando nuevos StatCard -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <StatCard
      title="Cotizaciones Totales"
      value={stats.totalCotizaciones}
      icon={icons.cotizaciones}
      color="blue"
    />
    <StatCard
      title="Cotizaciones Pendientes"
      value={stats.cotizacionesPendientes}
      icon={icons.pendientes}
      color="yellow"
    />
    <StatCard
      title="Items Activos"
      value={stats.itemsActivos}
      icon={icons.items}
      color="green"
    />
    <StatCard
      title="Total Clientes"
      value={stats.totalClientes}
      icon={icons.clientes}
      color="purple"
    />
  </div>

  <!-- Quick Actions -->
  <Card title="Acciones Rápidas" class="mb-8">
    <div class="grid grid-cols-1 sm:grid-cols-3 gap-6">
      <Card
        hover
        class="text-center border-2 border-dashed border-gray-300 hover:border-primary-400 transition-colors"
      >
        <a href="/quotes/new" class="block">
          <svg
            class="mx-auto h-10 w-10 text-primary-500 mb-3"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          <span class="text-sm font-medium text-gray-900 dark:text-white"
            >Nueva Cotización</span
          >
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
            Crear una nueva cotización
          </p>
        </a>
      </Card>

      <Card
        hover
        class="text-center border-2 border-dashed border-gray-300 hover:border-primary-400 transition-colors"
      >
        <a href="/items" class="block">
          <svg
            class="mx-auto h-10 w-10 text-green-500 mb-3"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
            ></path>
          </svg>
          <span class="text-sm font-medium text-gray-900 dark:text-white"
            >Gestionar Items</span
          >
          <p class="text-xs text-gray-500 mt-1">Administrar catálogo</p>
        </a>
      </Card>

      <Card
        hover
        class="text-center border-2 border-dashed border-gray-300 hover:border-primary-400 transition-colors"
      >
        <a href="/clients" class="block">
          <svg
            class="mx-auto h-10 w-10 text-purple-500 mb-3"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
            ></path>
          </svg>
          <span class="text-sm font-medium text-gray-900 dark:text-white"
            >Gestionar Clientes</span
          >
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
            Base de datos de clientes
          </p>
        </a>
      </Card>
    </div>
  </Card>

  <!-- Analytics Section -->
  {analytics && (
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <!-- Quotes Analytics -->
      <Card title="Análisis de Cotizaciones" class="h-fit">
        <div class="space-y-4">
          <div class="grid grid-cols-2 gap-4">
            <div class="text-center p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
              <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">
                {analytics.quotes.quotesThisMonth}
              </div>
              <div class="text-sm text-blue-600 dark:text-blue-400">Este mes</div>
            </div>
            <div class="text-center p-3 bg-green-50 dark:bg-green-900/20 rounded-lg">
              <div class="text-2xl font-bold text-green-600 dark:text-green-400">
                ${analytics.quotes.averageQuoteValue.toLocaleString()}
              </div>
              <div class="text-sm text-green-600 dark:text-green-400">Promedio</div>
            </div>
          </div>
          
          <div class="space-y-2">
            <h4 class="font-medium text-gray-900 dark:text-white">Por Estado:</h4>
            {analytics.quotes.quotesByStatus.slice(0, 3).map((status: any) => (
              <div class="flex justify-between items-center">
                <span class="text-sm text-gray-600 dark:text-gray-400">{status.status}</span>
                <Badge variant="info">{status.count}</Badge>
              </div>
            ))}
          </div>
        </div>
      </Card>

      <!-- Clients Analytics -->
      <Card title="Análisis de Clientes" class="h-fit">
        <div class="space-y-4">
          <div class="grid grid-cols-2 gap-4">
            <div class="text-center p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg">
              <div class="text-2xl font-bold text-purple-600 dark:text-purple-400">
                {analytics.clients.newClientsThisMonth}
              </div>
              <div class="text-sm text-purple-600 dark:text-purple-400">Nuevos este mes</div>
            </div>
            <div class="text-center p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg">
              <div class="text-2xl font-bold text-orange-600 dark:text-orange-400">
                {analytics.clients.clientsWithQuotes}
              </div>
              <div class="text-sm text-orange-600 dark:text-orange-400">Con cotizaciones</div>
            </div>
          </div>
          
          <div class="space-y-2">
            <h4 class="font-medium text-gray-900 dark:text-white">Top Clientes:</h4>
            {analytics.clients.topClientsByQuotes.slice(0, 3).map((client: any) => (
              <div class="flex justify-between items-center">
                <span class="text-sm text-gray-600 dark:text-gray-400 truncate">{client.clientName}</span>
                <Badge variant="primary">{client.quoteCount}</Badge>
              </div>
            ))}
          </div>
        </div>
      </Card>
    </div>
  )}

  <!-- Charts Section -->
  {analytics && (
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <!-- Quotes Chart -->
      <Card title="Cotizaciones por Mes" class="h-fit">
        <div class="space-y-3">
          {analytics.quotes.quotesByMonth.slice(-6).map((month: any) => (
            <div class="flex items-center space-x-3">
              <div class="text-sm text-gray-600 dark:text-gray-400 w-16">
                {new Date(month.month + '-01').toLocaleDateString('es-ES', { month: 'short' })}
              </div>
              <div class="flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                <div 
                  class="bg-blue-500 h-2 rounded-full transition-all duration-300"
                  style={`width: ${(month.count / Math.max(...analytics.quotes.quotesByMonth.map((m: any) => m.count))) * 100}%`}
                ></div>
              </div>
              <div class="text-sm font-medium text-gray-900 dark:text-white w-8">
                {month.count}
              </div>
            </div>
          ))}
        </div>
      </Card>

      <!-- Items Chart -->
      <Card title="Items por Categoría" class="h-fit">
        <div class="space-y-3">
          {analytics.items.itemsByCategory.slice(0, 5).map((category: any) => (
            <div class="flex items-center space-x-3">
              <div class="text-sm text-gray-600 dark:text-gray-400 flex-1 truncate">
                {category.category}
              </div>
              <div class="flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                <div 
                  class="bg-green-500 h-2 rounded-full transition-all duration-300"
                  style={`width: ${(category.count / Math.max(...analytics.items.itemsByCategory.map((c: any) => c.count))) * 100}%`}
                ></div>
              </div>
              <div class="text-sm font-medium text-gray-900 dark:text-white w-8">
                {category.count}
              </div>
            </div>
          ))}
        </div>
      </Card>
    </div>
  )}

  <!-- Recent Quotes -->
  <div class="bg-white dark:bg-gray-800 shadow rounded-lg">
    <div class="px-4 py-5 sm:p-6">
      <h3
        class="text-lg leading-6 font-medium text-gray-900 dark:text-white mb-4"
      >
        Cotizaciones Recientes
      </h3>
      <div class="flow-root">
        <ul role="list" class="-mb-8">
          {
            stats.cotizacionesRecientes.length > 0 ? (
              stats.cotizacionesRecientes.map(
                (cotizacion: any, index: number) => (
                  <li class="relative pb-4">
                    <div class="relative flex space-x-3">
                      <div class="flex-shrink-0">
                        <div
                          class={`h-8 w-8 rounded-full flex items-center justify-center ${
                            cotizacion.estado === "aprobado"
                              ? "bg-green-500"
                              : cotizacion.estado === "enviado"
                                ? "bg-blue-500"
                                : cotizacion.estado === "rechazado"
                                  ? "bg-red-500"
                                  : "bg-yellow-500"
                          }`}
                        >
                          <svg
                            class="h-5 w-5 text-white"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                          >
                            {cotizacion.estado === "aprobado" ? (
                              <path
                                fill-rule="evenodd"
                                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                clip-rule="evenodd"
                              />
                            ) : cotizacion.estado === "rechazado" ? (
                              <path
                                fill-rule="evenodd"
                                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                clip-rule="evenodd"
                              />
                            ) : (
                              <path
                                fill-rule="evenodd"
                                d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                                clip-rule="evenodd"
                              />
                            )}
                          </svg>
                        </div>
                      </div>
                      <div class="min-w-0 flex-1">
                        <div class="text-sm text-gray-500 dark:text-gray-300">
                          <a
                            href={`/quotes/view/${cotizacion.id}`}
                            class="font-medium text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400"
                          >
                            {cotizacion.numero}
                          </a>
                          -{" "}
                          {cotizacion.cliente?.nombre ||
                            "Cliente no encontrado"}
                          {cotizacion.cliente?.empresa &&
                            ` (${cotizacion.cliente.empresa})`}
                          <div class="text-xs text-gray-400 dark:text-gray-300 mt-1">
                            {cotizacion.titulo} - $
                            {cotizacion.total.toLocaleString("es-AR")}
                            <span class="ml-2 capitalize px-2 py-1 text-xs rounded-full bg-gray-100 dark:bg-gray-700">
                              {cotizacion.estado}
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                    {index < stats.cotizacionesRecientes.length - 1 && (
                      <div class="absolute top-8 left-4 -ml-px h-full w-0.5 bg-gray-200 dark:bg-gray-600" />
                    )}
                  </li>
                )
              )
            ) : (
              <li class="flex items-center justify-center py-8 text-gray-500 dark:text-gray-400">
                <div class="text-center">
                  <svg
                    class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    />
                  </svg>
                  <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                    No hay cotizaciones recientes
                  </p>
                  <a
                    href="/quotes/new"
                    class="mt-2 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-primary-700 bg-primary-100 hover:bg-primary-200"
                  >
                    Crear primera cotización
                  </a>
                </div>
              </li>
            )
          }
        </ul>
      </div>
    </div>
  </div>
</DashboardLayout>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    // Los datos reales ya están cargados desde Firebase en el servidor
    // No necesitamos sobrescribir nada aquí

    console.log("Dashboard cargado con datos reales de Firebase");
  });
</script>
