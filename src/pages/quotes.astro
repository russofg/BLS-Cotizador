---
import Dashboard from "../layouts/Dashboard.astro";
import { cotizacionService, clienteService } from "../utils/database";
import { DateHelper } from "../utils/dateHelpers";
import { QuoteHelper } from "../utils/quoteHelpers";
import PageHeader from "../components/ui/PageHeader.astro";
import Card from "../components/ui/Card.astro";
import Button from "../components/ui/Button.astro";
import Badge from "../components/ui/Badge.astro";
import ScrollbarStyles from "../components/ScrollbarStyles.astro";
import {
  QuoteTrackingService,
  QuoteStatus,
} from "../services/QuoteTrackingService";

// Usar la función centralizada de formateo de fechas
const safeFormatDate = DateHelper.safeFormatDate;

// Obtener todas las cotizaciones y clientes
let cotizaciones: any[] = [];
let clientes: any[] = [];
let trackingStats: any = null;
let error = "";

try {
  cotizaciones = await cotizacionService.getAll();
  clientes = await clienteService.getAll();

  // Cargar estadísticas de seguimiento
  try {
    trackingStats = await QuoteTrackingService.getTrackingStats();
  } catch (trackingError) {
    console.warn("Error loading tracking stats:", trackingError);
    // Continuar sin estadísticas de seguimiento
  }

  // Enriquecer cotizaciones con información del cliente usando utilidades centralizadas
  cotizaciones = cotizaciones.map((cotizacion) => {
    const normalizedQuote = QuoteHelper.normalizeQuoteData(cotizacion);
    const enrichedQuote = QuoteHelper.enrichQuoteWithClient(
      normalizedQuote,
      clientes
    );

    // Determinar qué fecha mostrar: priorizar fecha del evento sobre fecha de creación
    const fechaParaMostrar =
      normalizedQuote.fechaEvento ||
      normalizedQuote.fecha_evento ||
      normalizedQuote.created_at ||
      normalizedQuote.createdAt;

    const esEventoDate = !!(
      normalizedQuote.fechaEvento || normalizedQuote.fecha_evento
    );

    return {
      ...enrichedQuote,
      numero_display: QuoteHelper.generateQuoteNumber(
        normalizedQuote,
        clientes.find(
          (c) =>
            c.id === normalizedQuote.cliente_id ||
            c.id === normalizedQuote.clienteId
        )
      ),
      fecha_display: safeFormatDate(fechaParaMostrar),
      fecha_tipo: esEventoDate ? "evento" : "creacion",
    };
  });

  console.log("Cotizaciones cargadas:", cotizaciones.length);
} catch (e) {
  error = "Error al cargar las cotizaciones";
  console.error("Error loading quotes:", e);
}
---

<Dashboard title="Cotizaciones">
  <ScrollbarStyles />
  <div class="space-y-6 pb-6">
    <!-- Header -->
    <PageHeader
      title="Cotizaciones"
      subtitle="Gestiona todas las cotizaciones de tu negocio"
    >
      <div slot="actions" class="flex space-x-3">
        <Button href="/quotes/wizard" variant="primary" size="md">
          <span class="flex items-center">
            <span class="mr-1">➕</span> Nueva Cotización
          </span>
        </Button>
      </div>
    </PageHeader>

    {
      error && (
        <div class="bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-800 text-red-700 dark:text-red-200 px-4 py-3 rounded">
          {error}
        </div>
      )
    }

    <!-- Estadísticas de Seguimiento -->
    {
      trackingStats && (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
          <Card class="text-center">
            <div class="text-2xl font-bold text-blue-600 dark:text-blue-400 mb-1">
              {trackingStats.totalCotizaciones}
            </div>
            <div class="text-sm text-gray-600 dark:text-gray-400">
              Total Cotizaciones
            </div>
          </Card>

          <Card class="text-center">
            <div class="text-2xl font-bold text-green-600 dark:text-green-400 mb-1">
              {trackingStats.conversionRate.toFixed(1)}%
            </div>
            <div class="text-sm text-gray-600 dark:text-gray-400">
              Tasa de Conversión
            </div>
          </Card>

          <Card class="text-center">
            <div class="text-2xl font-bold text-orange-600 dark:text-orange-400 mb-1">
              {trackingStats.cotizacionesVencidas}
            </div>
            <div class="text-sm text-gray-600 dark:text-gray-400">Vencidas</div>
          </Card>

          <Card class="text-center">
            <div class="text-2xl font-bold text-purple-600 dark:text-purple-400 mb-1">
              {trackingStats.tiempoPromedioAprobacion.toFixed(0)} días
            </div>
            <div class="text-sm text-gray-600 dark:text-gray-400">
              Promedio Aprobación
            </div>
          </Card>
        </div>
      )
    }

    <!-- Distribución por Estado -->
    {
      trackingStats && trackingStats.porEstado.length > 0 && (
        <Card title="Distribución por Estado" class="mb-6">
          <div class="space-y-3">
            {trackingStats.porEstado.map((estado: any) => (
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                  <Badge
                    variant={
                      estado.estado === "aprobada"
                        ? "success"
                        : estado.estado === "enviada"
                          ? "info"
                          : estado.estado === "revisada"
                            ? "warning"
                            : estado.estado === "rechazada"
                              ? "danger"
                              : "default"
                    }
                  >
                    {QuoteTrackingService.getStatusDisplayName(estado.estado)}
                  </Badge>
                  <span class="text-sm text-gray-600 dark:text-gray-400">
                    {estado.count} cotizaciones
                  </span>
                </div>
                <div class="text-sm font-medium text-gray-900 dark:text-white">
                  {estado.porcentaje.toFixed(1)}%
                </div>
              </div>
            ))}
          </div>
        </Card>
      )
    }

    <!-- Próximos Vencimientos -->
    {
      trackingStats && trackingStats.proximosVencimientos.length > 0 && (
        <Card title="Próximos Vencimientos" class="mb-6">
          <div class="space-y-3">
            {trackingStats.proximosVencimientos
              .slice(0, 5)
              .map((cotizacion: any) => (
                <div class="flex items-center justify-between p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg">
                  <div class="flex-1">
                    <div class="font-medium text-gray-900 dark:text-white">
                      {cotizacion.numero}
                    </div>
                    <div class="text-sm text-gray-600 dark:text-gray-400">
                      {cotizacion.clienteNombre} - $
                      {cotizacion.total.toLocaleString()}
                    </div>
                  </div>
                  <div class="text-sm font-medium text-orange-600 dark:text-orange-400">
                    {cotizacion.diasVencimiento} días
                  </div>
                </div>
              ))}
          </div>
        </Card>
      )
    }

    <!-- Lista de Cotizaciones -->
    <Card padding="none" shadow="sm" class="custom-scrollbar">
      {
        cotizaciones.length === 0 ? (
          <div class="text-center py-12 px-6">
            <div class="w-16 h-16 mx-auto mb-4 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center">
              <svg
                class="w-8 h-8 text-gray-400 dark:text-gray-500"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                />
              </svg>
            </div>
            <p class="text-gray-500 dark:text-gray-400 text-lg mb-6">
              No hay cotizaciones creadas
            </p>
            <Button href="/quotes/new" variant="primary" size="lg" class="px-6">
              Crear Primera Cotización
            </Button>
          </div>
        ) : (
          <ul class="divide-y divide-gray-200 dark:divide-gray-600">
            {cotizaciones.map((cotizacion) => (
              <li class="px-4 sm:px-6 py-5 sm:py-6 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-y-4">
                  {/* Información principal */}
                  <div class="flex-1 min-w-0">
                    <div class="flex flex-col lg:flex-row lg:items-start lg:justify-between gap-y-3 lg:gap-x-6">
                      {/* Título y detalles */}
                      <div class="flex-1 min-w-0">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1 truncate">
                          {cotizacion.titulo || "Sin título"}
                        </h3>
                        <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 font-mono">
                          {cotizacion.numero_display}
                        </p>

                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-2">
                          <div class="flex items-center space-x-2">
                            <svg
                              class="w-4 h-4 text-gray-500 dark:text-gray-400 flex-shrink-0"
                              fill="none"
                              stroke="currentColor"
                              viewBox="0 0 24 24"
                            >
                              <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                              />
                            </svg>
                            <span class="text-sm text-gray-600 dark:text-gray-300 truncate font-medium">
                              {cotizacion.cliente_nombre}
                            </span>
                          </div>

                          <div class="flex items-center space-x-2">
                            <svg
                              class="w-4 h-4 text-gray-500 dark:text-gray-400 flex-shrink-0"
                              fill="none"
                              stroke="currentColor"
                              viewBox="0 0 24 24"
                            >
                              {cotizacion.fecha_tipo === "evento" ? (
                                <path
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                  stroke-width="2"
                                  d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                                />
                              ) : (
                                <path
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                  stroke-width="2"
                                  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                                />
                              )}
                            </svg>
                            <span class="text-sm text-gray-600 dark:text-gray-300">
                              {cotizacion.fecha_display}
                              {cotizacion.fecha_tipo === "evento" && (
                                <span class="text-xs text-blue-600 dark:text-blue-400 ml-1">
                                  (Evento)
                                </span>
                              )}
                              {cotizacion.fecha_tipo === "creacion" && (
                                <span class="text-xs text-gray-400 dark:text-gray-500 ml-1">
                                  (Creada)
                                </span>
                              )}
                            </span>
                          </div>
                        </div>
                      </div>

                      {/* Precio destacado */}
                      <div class="flex flex-col items-start lg:items-end gap-3">
                        {cotizacion.total && (
                          <div class="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 px-4 py-3 rounded-xl border border-green-200 dark:border-green-700/30">
                            <div class="text-center lg:text-right">
                              <p class="text-xs font-medium text-green-700 dark:text-green-300 uppercase tracking-wide mb-1">
                                Total
                              </p>
                              <p class="text-2xl font-bold text-green-800 dark:text-green-200">
                                $
                                {Number(cotizacion.total).toLocaleString(
                                  "es-AR"
                                )}
                              </p>
                            </div>
                          </div>
                        )}

                        <Badge
                          variant={
                            cotizacion.estado === "enviado" ||
                            cotizacion.estado === "enviada"
                              ? "success"
                              : cotizacion.estado === "aprobado"
                                ? "info"
                                : cotizacion.estado === "rechazado"
                                  ? "danger"
                                  : "warning"
                          }
                          size="sm"
                          class="w-fit"
                        >
                          {cotizacion.estado || "borrador"}
                        </Badge>
                      </div>
                    </div>
                  </div>

                  {/* Acciones */}
                  <div class="flex flex-row lg:flex-col gap-2 lg:gap-3 lg:ml-6">
                    <Button
                      href={`/quotes/view/${cotizacion.id}`}
                      variant="secondary"
                      size="sm"
                      title="Ver cotización"
                      class="flex-1 lg:flex-none lg:w-20 py-2.5 text-center font-medium"
                    >
                      <span class="hidden sm:inline">Ver</span>
                      <svg
                        class="w-4 h-4 sm:hidden"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                        />
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                        />
                      </svg>
                    </Button>
                    <Button
                      href={`/quotes/edit/${cotizacion.id}`}
                      variant="warning"
                      size="sm"
                      title="Editar cotización"
                      class="flex-1 lg:flex-none lg:w-20 py-2.5 text-center font-medium"
                    >
                      <span class="hidden sm:inline">Editar</span>
                      <svg
                        class="w-4 h-4 sm:hidden"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                        />
                      </svg>
                    </Button>
                    <Button
                      href={`/quotes/tracking/${cotizacion.id}`}
                      variant="info"
                      size="sm"
                      title="Seguimiento de cotización"
                      class="flex-1 lg:flex-none lg:w-20 py-2.5 text-center font-medium"
                    >
                      <span class="hidden sm:inline">Seguir</span>
                      <svg
                        class="w-4 h-4 sm:hidden"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                        />
                      </svg>
                    </Button>
                    <button
                      onclick={`deleteQuote('${cotizacion.id}', '${cotizacion.titulo || cotizacion.numero_display}')`}
                      class="flex-1 lg:flex-none lg:w-20 bg-red-100 hover:bg-red-200 dark:bg-red-900/50 dark:hover:bg-red-800 text-red-700 dark:text-red-200 px-3 py-2.5 rounded text-sm font-medium transition-colors text-center"
                      title="Eliminar cotización"
                    >
                      <span class="hidden sm:inline">Eliminar</span>
                      <svg
                        class="w-4 h-4 sm:hidden mx-auto"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
                        />
                      </svg>
                    </button>
                  </div>
                </div>

                {cotizacion.descripcion && (
                  <div class="mt-4 pl-4 border-l-2 border-gray-200 dark:border-gray-600">
                    <p class="text-sm text-gray-600 dark:text-gray-400 leading-relaxed">
                      {cotizacion.descripcion}
                    </p>
                  </div>
                )}
              </li>
            ))}
          </ul>
        )
      }
    </Card>
  </div>
</Dashboard>

<script>
  import { notifications } from "../utils/notifications.js";

  // Función para eliminar cotización con confirmación elegante
  (window as any).deleteQuote = async function (
    quoteId: string,
    quoteTitle: string
  ) {
    try {
      const result = await notifications.confirmDelete(quoteTitle);

      if (result.isConfirmed) {
        // Mostrar loading
        notifications.loading("Eliminando cotización", "Por favor espera...");

        const response = await fetch(`/api/quotes?id=${quoteId}`, {
          method: "DELETE",
        });

        if (response.ok) {
          await notifications.success(
            "¡Eliminada!",
            "La cotización ha sido eliminada exitosamente"
          );
          window.location.reload();
        } else {
          throw new Error("Error al eliminar la cotización");
        }
      }
    } catch (error) {
      notifications.error(
        "Error",
        "No se pudo eliminar la cotización: " +
          (error instanceof Error ? error.message : String(error))
      );
    }
  };
</script>
