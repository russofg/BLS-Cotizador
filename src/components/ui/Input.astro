---
interface Props {
  type?:
    | "text"
    | "email"
    | "password"
    | "number"
    | "date"
    | "tel"
    | "url"
    | "search";
  name?: string;
  id?: string;
  placeholder?: string;
  value?: string | number;
  required?: boolean;
  disabled?: boolean;
  readonly?: boolean;
  min?: string | number;
  max?: string | number;
  step?: string | number;
  autocomplete?: string;
  class?: string;
  label?: string;
  helperText?: string;
  error?: string;
}

const {
  type = "text",
  name,
  id,
  placeholder,
  value,
  required = false,
  disabled = false,
  readonly = false,
  min,
  max,
  step,
  autocomplete,
  class: className = "",
  label,
  helperText,
  error,
} = Astro.props;

const baseClasses =
  "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm dark:bg-gray-700 dark:text-white";
const errorClasses = error
  ? "border-red-300 dark:border-red-500 focus:border-red-500 focus:ring-red-500"
  : "";
const disabledClasses = disabled
  ? "bg-gray-50 dark:bg-gray-800 text-gray-500 dark:text-gray-400 cursor-not-allowed"
  : "";

const inputClasses = `${baseClasses} ${errorClasses} ${disabledClasses} ${className}`;
---

<div class="w-full">
  {
    label && (
      <label
        for={id}
        class="block text-sm font-medium text-gray-700 dark:text-gray-300"
      >
        {label}
        {required && <span class="text-red-500 dark:text-red-400 ml-1">*</span>}
      </label>
    )
  }

  <input
    type={type}
    name={name}
    id={id}
    placeholder={placeholder}
    value={value}
    required={required}
    disabled={disabled}
    readonly={readonly}
    min={min}
    max={max}
    step={step}
    autocomplete={autocomplete}
    class={inputClasses}
  />

  {
    helperText && !error && (
      <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{helperText}</p>
    )
  }

  {error && <p class="mt-1 text-sm text-red-600 dark:text-red-400">{error}</p>}
</div>
